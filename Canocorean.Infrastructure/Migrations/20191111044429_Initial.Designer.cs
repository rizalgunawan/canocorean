// <auto-generated />
using Canocorean.Infrastructure.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Canocorean.Infrastructure.Migrations
{
    [DbContext(typeof(CanocoreanDbContext))]
    [Migration("20191111044429_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Canocorean.Infrastructure.EntityFramework.ReferenceEntities.Country", b =>
                {
                    b.Property<string>("ISOCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("ISOCode");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            ISOCode = "RU",
                            Name = "Russian Federation"
                        },
                        new
                        {
                            ISOCode = "US",
                            Name = "United States of America"
                        },
                        new
                        {
                            ISOCode = "CN",
                            Name = "People's Republic of China"
                        });
                });

            modelBuilder.Entity("Canocorean.Infrastructure.EntityFramework.ReferenceEntities.Province", b =>
                {
                    b.Property<string>("CountryISOCode")
                        .HasMaxLength(2);

                    b.Property<string>("ISOCode")
                        .HasMaxLength(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("CountryISOCode", "ISOCode");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            CountryISOCode = "RU",
                            ISOCode = "MOS",
                            Name = "Moskovskaya oblast'"
                        },
                        new
                        {
                            CountryISOCode = "RU",
                            ISOCode = "LEN",
                            Name = "Leningradskaya oblast'"
                        },
                        new
                        {
                            CountryISOCode = "RU",
                            ISOCode = "NVS",
                            Name = "Novosibirskaya oblast'"
                        },
                        new
                        {
                            CountryISOCode = "US",
                            ISOCode = "NY",
                            Name = "New York"
                        },
                        new
                        {
                            CountryISOCode = "US",
                            ISOCode = "WA",
                            Name = "Washington"
                        },
                        new
                        {
                            CountryISOCode = "US",
                            ISOCode = "CA",
                            Name = "California"
                        },
                        new
                        {
                            CountryISOCode = "CN",
                            ISOCode = "HK",
                            Name = "Hong Kong"
                        },
                        new
                        {
                            CountryISOCode = "CN",
                            ISOCode = "HL",
                            Name = "Harbin"
                        },
                        new
                        {
                            CountryISOCode = "CN",
                            ISOCode = "JS",
                            Name = "Nanjing"
                        });
                });

            modelBuilder.Entity("Canocorean.Users.User", b =>
                {
                    b.Property<string>("Login")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.HasKey("Login");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Canocorean.Infrastructure.EntityFramework.ReferenceEntities.Province", b =>
                {
                    b.HasOne("Canocorean.Infrastructure.EntityFramework.ReferenceEntities.Country", "Country")
                        .WithMany("Provinces")
                        .HasForeignKey("CountryISOCode")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Canocorean.Users.User", b =>
                {
                    b.OwnsOne("Canocorean.Users.User+UserLocation", "Location", b1 =>
                        {
                            b1.Property<string>("UserLogin");

                            b1.Property<string>("CountryISOCode")
                                .IsRequired()
                                .HasMaxLength(2);

                            b1.Property<string>("ProvinceISOCode")
                                .IsRequired()
                                .HasMaxLength(3);

                            b1.HasKey("UserLogin");

                            b1.ToTable("User");

                            b1.HasOne("Canocorean.Users.User")
                                .WithOne("Location")
                                .HasForeignKey("Canocorean.Users.User+UserLocation", "UserLogin")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
